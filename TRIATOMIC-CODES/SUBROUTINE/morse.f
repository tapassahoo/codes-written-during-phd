CCC
CCC   MORSE FUNCTION AND THE NORMALIZATION
CCC
      IMPLICIT REAL*8 (A-H,O-Z)
      PARAMETER (NN=1000)
      COMMON/MORSE/DD(3),REQ(3),BETA(3)
      COMMON/MASS/EM(3),EMU,DM(3),EPS(3),RM12(3),RM123(3)
      HBAR=0.06350781278D0
      CALL HYPSET
      RMIN=0.0D0
      RMAX=5.0D0
      DR=(RMAX-RMIN)/DFLOAT(NN)
      ICH=1
      DE=DD(ICH)
      RE=REQ(ICH)
      BE=BETA(ICH)
      AMR=RM12(ICH)
      S=SQRT(2.0D0*AMR*DE)*2.0D0/(HBAR*BE)
c     DO KMORSE=0,4
      KMORSE=10
      SS=0.0D0
      DO I=1,NN
      R1=RMIN+(I-1)*DR+0.5D0*DR
      ARG=EXP(-BE*(R1-RE))
      PSIR=SQRT(BE)*AFI(KMORSE,S,ARG)
      SS=SS+PSIR*PSIR*DR
      WRITE(102+KMORSE,44)R1,PSIR
      ENDDO
      WRITE(6,*)KMORSE,SS 
c     ENDDO
  44  FORMAT(1x,2f12.6)
      STOP
      END
CC
      BLOCK DATA MOSC
      IMPLICIT REAL*8 (A-H,O-Z)
      COMMON/MORSE/DD(3),REQ(3),BETA(3)
      COMMON/MASS/EM(3),EMU,DM(3),EPS(3),RM12(3),RM123(3)
C
      DATA REQ/    3*0.741020D0  /
      DATA BETA/   3*1.950477D0  /
      DATA DD/     3*4.580841D0  /
      DATA EM/       2.016490D0,  1.007825D0,  1.007825D0  /
C
      END
CC
      SUBROUTINE HYPSET
C
C  INITIALIZE POTENTIAL CONSTANTS AND ATOMIC MASSES FOR D + H2
C
      IMPLICIT REAL*8(A-H,O-Z),INTEGER*4(I-N)
      COMMON/MASS/EM(3),EMU,DM(3),EPS(3),RM12(3),RM123(3)
      XM=EM(1)+EM(2)+EM(3)
      EMU=EM(1)*EM(2)*EM(3)/XM
      EMU=DSQRT(EMU)
      DO 10  I=1,3
      DM(I)=DSQRT(EM(I)*(1.D0-EM(I)/XM)/EMU)
   10 CONTINUE
      EPS(1)=0.D0
      EPS(2)=2.D0*DATAN(EM(3)/EMU)
      EPS(3)=-2.D0*DATAN(EM(2)/EMU)
      RM12(1)=EM(2)*EM(3)/(EM(2)+EM(3))
      RM12(2)=EM(1)*EM(3)/(EM(1)+EM(3))
      RM12(3)=EM(1)*EM(2)/(EM(1)+EM(2))
      RM123(1)=EM(1)*(EM(2)+EM(3))/XM
      RM123(2)=EM(2)*(EM(1)+EM(3))/XM
      RM123(3)=EM(3)*(EM(1)+EM(2))/XM
      RETURN
C  END OF SETUP
      END
CCC
CCC
C SUBROUTINE FOR MORSE WAVEFUNCTION
      DOUBLE PRECISION FUNCTION AFI(N,S,Y)
      IMPLICIT REAL*8(A-H,O-Z)
      DIMENSION RL(50)
      IF (Y.EQ.0.0) GO TO 5
      FN=0.0D0
      IF (N.LT.2) GO TO 1
C     DO 2 I=2,N
C   2 FN=FN/I
C LOG N! IS CALCULATED
      IF (N.GT.20) GO TO 13
      DO 2 I=2,N
    2 FN=FN-LOG(FLOAT(I))
      FN=.5*FN
      GO TO 1
   13 XX=FLOAT(N+1)
      IFAIL=0
      DLNF=GAMMLN(XX)
      FN=-.5*DLNF
    1 XX=S-FLOAT(N)
      IFAIL=0
      DLNG=GAMMLN(XX)
      XX=XX-FLOAT(N)
      IFAIL=0
      DLNG1=GAMMLN(XX)
      XX=XX-1.
      IFAIL=0
      DLNG2=GAMMLN(XX)
      ARG=0.5*(DLNG-DLNG1-DLNG2)
      ARG=ARG-0.5*S*Y+(0.5*S-1.*N-0.5)*DLOG(S*Y)
      ARG=ARG+FN
      IF (N.GT.-1) GO TO 10
      FA=DSQRT(FN)*DEXP(ARG)
      N1=N+1
      SIG=1.
      SU=1.0
      IF (N.EQ.0) GO TO 4
      DO 3 I=2,N1
      I1=I-1
      SIG=-SIG
      F=1.
      DO 6 K=1,I1
    6 F=F*(N1-K)/K/(1.-(2.*N+1-K)/S)
      SU=SU+F*SIG*Y**(1.*I1)
    3 CONTINUE
    4 AFI=FA*SU
      GO TO 7
    5 AFI=0.0D0
    7 RETURN
   10 ALF=S-2.D0*FLOAT(N)-1.D0
      RL(1)=1.0D0
      Z=S*Y
      RL(2)=ALF+1.-Z
      NS=N+1
      DO 11 I=3,NS
      RN1=FLOAT(I-1)
      RL(I)=((2.*RN1-1.+ALF-Z)*RL(I-1)-(RN1-1.+ALF)*RL(I-2))/RN1
   11 CONTINUE
      XX=1.*N+ALF+1.
      IFAIL=0
      DLNG=GAMMLN(XX)
      ALF1=ALF+1.
      IFAIL=0
      DLNG1=GAMMLN(ALF1)
      RN1=FLOAT(N+1)
      IFAIL=0
      DLNG2=GAMMLN(RN1)
      FARG=DLNG2+DLNG1-DLNG
      IF (RL(NS).LT.2.0D-9) GO TO 12
      DLNG=DLOG(RL(NS))
      AFI=DEXP(ARG+FARG+DLNG)
      RETURN
   12 AFI=DEXP(ARG+FARG)*RL(NS)
      RETURN
   14 AN=1.0D0
      Z=S*Y
      ALF=S-2.*N-1.
      DO 15 M=N,1,-1
      RM=FLOAT(M)
   15 AN=1.D0-Z*AN*FLOAT(N-M+1)/RM/(ALF+RM)
      IF (ARG.GT.10.0) WRITE(6,100) Y,ARG,AN
  100 FORMAT(1X,5E10.3)
      AFI=AN*DEXP(ARG)
      RETURN
      END
      DOUBLE PRECISION FUNCTION GAMMLN(XX)
      DOUBLE PRECISION XX,ZZ,TERM,RZ2
C      WRITE(6,*) 'ARG=',XX
      IER=0
      ZZ=XX
      IF(XX-1.D10) 2,2,1
    1 IF(XX-1.D30) 8,9,9
C
C SEE IF XX IS NEAR ZERO OR NEGATIVE
C
    2 IF(XX-1.D-9) 3,3,4
    3 IER=-1
      GAMMLN=-1.D30
      GO TO 10
C
C XX GREATER THAN ZERO AND LESS THAN OR EQUAL TO 1.D10
C
    4 TERM=1.D0
    5 IF(ZZ-18.D0) 6,6,7
    6 TERM=TERM*ZZ
      ZZ=ZZ+1.D0
      GO TO 5
    7 RZ2=1.D0/ZZ**2
      GAMMLN=(ZZ-0.5D0)*DLOG(ZZ)-ZZ+0.9189385332046727-DLOG(TERM)+
     1(1.D0/ZZ)*(.83333333333333333D-1 -(RZ2*(.27777777777777777D-2
     2 +(RZ2*(.793650793650793650D-3-(RZ2*(.5952380952380952)))))))
      GO TO 10
C
C XX GREATER THAN 1.D+10 AND LESS THAN 1.D+70
C
    8 GAMMLN=ZZ*(DLOG(ZZ)-1.D0)
      GO TO 10
C
C XX GREATER THAN OR EQUAL TO 1.D+70
    9 IER=+1
      WRITE(6,*)'ARGUMENT LNGAM > 1.D30'
      GAMMLN=1.D+30
   10 RETURN
      END
